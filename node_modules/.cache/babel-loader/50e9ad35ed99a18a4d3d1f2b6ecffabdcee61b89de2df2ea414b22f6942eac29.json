{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\progress-bar\\\\src\\\\progressBar\\\\ProgressBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./progressBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ProgressBar({\n  thresholds,\n  value\n}) {\n  _s();\n  const [progress, setProgress] = useState(value);\n  // [25, 50, 100, 200, 500, 1000]\n  const getColor = step => {\n    return \"violet\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      style: {\n        display: \"flex\"\n      },\n      children: thresholds.map(step => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-step\",\n            style: {\n              background: \"red\",\n              height: \"30px\",\n              width: `${100 / thresholds.length}%`\n            },\n            children: [\"\\u2729\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: step\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-label\",\n      children: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n//<div className='progress-bar-fill' style={{width: `${progress}%`, backgroundColor: getColor()}}></div>\n_s(ProgressBar, \"naLTzwwGAM0g/JVfGXEZ4LabJ9c=\");\n_c = ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ProgressBar","thresholds","value","_s","progress","setProgress","getColor","step","className","children","style","display","map","background","height","width","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/progress-bar/src/progressBar/ProgressBar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"./progressBar.css\"\r\n\r\nexport function ProgressBar({ thresholds, value }) {\r\n  const [progress, setProgress] = useState(value)\r\n  // [25, 50, 100, 200, 500, 1000]\r\n  const getColor = (step) => {\r\n    return \"violet\"\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n        <div className='progress-bar' style={{display: \"flex\"}}>\r\n            {thresholds.map((step) => {\r\n                return (\r\n                    <div>\r\n                    <div className='progress-step' style={{background: \"red\", height: \"30px\", width: `${100/thresholds.length}%`}}>âœ©\r\n                    <span>{step}</span>\r\n                    </div>\r\n                    <div className='progress-fill'></div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n        <div className='progress-label'>{progress}</div>\r\n      </div>\r\n  )\r\n}\r\n\r\n//<div className='progress-bar-fill' style={{width: `${progress}%`, backgroundColor: getColor()}}></div>\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,SAASC,WAAWA,CAAC;EAAEC,UAAU;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAACK,KAAK,CAAC;EAC/C;EACA,MAAMI,QAAQ,GAAIC,IAAI,IAAK;IACzB,OAAO,QAAQ;EACjB,CAAC;EACD,oBACER,OAAA;IAAKS,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBV,OAAA;MAAKS,SAAS,EAAC,cAAc;MAACE,KAAK,EAAE;QAACC,OAAO,EAAE;MAAM,CAAE;MAAAF,QAAA,EAClDR,UAAU,CAACW,GAAG,CAAEL,IAAI,IAAK;QACtB,oBACIR,OAAA;UAAAU,QAAA,gBACAV,OAAA;YAAKS,SAAS,EAAC,eAAe;YAACE,KAAK,EAAE;cAACG,UAAU,EAAE,KAAK;cAAEC,MAAM,EAAE,MAAM;cAAEC,KAAK,EAAG,GAAE,GAAG,GAACd,UAAU,CAACe,MAAO;YAAE,CAAE;YAAAP,QAAA,GAAC,QAC/G,eAAAV,OAAA;cAAAU,QAAA,EAAOF;YAAI;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC,eACNrB,OAAA;YAAKS,SAAS,EAAC;UAAe;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MAEd,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNrB,OAAA;MAAKS,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAEL;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEZ;;AAEA;AAAAjB,EAAA,CAzBgBH,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}