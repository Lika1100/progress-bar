{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\progress-bar\\\\src\\\\calculator\\\\Table.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Table({\n  currentPortfolio,\n  annualSavings,\n  annualRoiPercentage,\n  retirementExpenses,\n  inflationRate = 10\n}) {\n  const data = doMath(currentPortfolio, annualSavings, annualRoiPercentage, inflationRate);\n  const minRetirementPortfolio = retirementExpenses / (annualRoiPercentage / 100);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"ROI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Net Worth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), data.map(({\n        portfolio,\n        annualSavings,\n        annualRoi,\n        year\n      }) => {\n        const less = portfolio < minRetirementPortfolio;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            background: less ? \"#ffca00\" : \"#47d982\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatNumbers(annualSavings)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatNumbers(annualRoi)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatNumbers(portfolio)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = Table;\nfunction doMath(currentPortfolio, annualSavings, annualRoiPercentage, inflationRate) {\n  const currentYear = new Date().getFullYear();\n  const result = [];\n  let portfolio = currentPortfolio;\n  for (let i = 0; i < 30; i++) {\n    const annualRoi = portfolio * (inflationRate + annualRoiPercentage) / 100;\n    const annualSavingsInflationAdjusted = (1 + inflationRate / 100) ** i;\n    portfolio += annualSavings * annualSavingsInflationAdjusted + annualRoi;\n    result.push({\n      year: currentYear + i,\n      annualSavings,\n      annualRoi,\n      portfolio\n    });\n  }\n  return result;\n}\nfunction formatNumbers(num) {\n  let str = num.toFixed(0);\n  const result = [];\n  while (str.length > 0) {\n    result.unshift(str.slice(-3));\n    str = str.slice(0, -3);\n  }\n  return result.join(\" \");\n}\nconsole.log(formatNumbers(12345678.90)); //\"12 345 678\"\n\n// console.table(doMath(20_000_000, 10_000_000, 3));\n\n// 2023        600_000      10_000_000  30_600_000\n// 2024        600_000      10_000_000\n// 2025   ....\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Table","currentPortfolio","annualSavings","annualRoiPercentage","retirementExpenses","inflationRate","data","doMath","minRetirementPortfolio","children","fileName","_jsxFileName","lineNumber","columnNumber","map","portfolio","annualRoi","year","less","style","background","formatNumbers","_c","currentYear","Date","getFullYear","result","i","annualSavingsInflationAdjusted","push","num","str","toFixed","length","unshift","slice","join","console","log","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/progress-bar/src/calculator/Table.js"],"sourcesContent":["import React from 'react'\r\n\r\nexport function Table({\r\n  currentPortfolio,\r\n  annualSavings,\r\n  annualRoiPercentage,\r\n  retirementExpenses,\r\n  inflationRate = 10,\r\n}) {\r\n  const data = doMath(currentPortfolio, annualSavings, annualRoiPercentage, inflationRate);\r\n  const minRetirementPortfolio = retirementExpenses / (annualRoiPercentage / 100)\r\n  \r\n  return (\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <th>Year</th>\r\n          <th>Savings</th>\r\n          <th>ROI</th>\r\n          <th>Net Worth</th>\r\n        </tr>\r\n        {data.map(({ portfolio, annualSavings, annualRoi, year }) => {\r\n          const less = portfolio < minRetirementPortfolio;\r\n          return (\r\n            <tr style={{background: less ? \"#ffca00\" : \"#47d982\"}}>\r\n              <td>{year}</td>\r\n              <td>{formatNumbers(annualSavings)}</td>\r\n              <td>{formatNumbers(annualRoi)}</td>\r\n              <td>{formatNumbers(portfolio)}</td>\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nfunction doMath(currentPortfolio, annualSavings, annualRoiPercentage, inflationRate) {\r\n  const currentYear = new Date().getFullYear()\r\n  const result = []\r\n\r\n  let portfolio = currentPortfolio;\r\n  for (let i = 0; i < 30; i++) {\r\n    const annualRoi = portfolio * (inflationRate + annualRoiPercentage) / 100;\r\n    const annualSavingsInflationAdjusted = (1 + inflationRate / 100) ** i\r\n    portfolio += annualSavings * annualSavingsInflationAdjusted + annualRoi;\r\n    result.push({\r\n      year: currentYear + i,\r\n      annualSavings,\r\n      annualRoi,\r\n      portfolio,\r\n    })\r\n  }\r\n  return result\r\n}\r\n\r\nfunction formatNumbers(num) {\r\n  let str = num.toFixed(0)\r\n  const result = []\r\n\r\n  while (str.length > 0) {\r\n    result.unshift(str.slice(-3))\r\n    str = str.slice(0, -3)\r\n  }\r\n\r\n  return result.join(\" \")\r\n}\r\n\r\nconsole.log(formatNumbers(12345678.90)) //\"12 345 678\"\r\n\r\n// console.table(doMath(20_000_000, 10_000_000, 3));\r\n\r\n// 2023        600_000      10_000_000  30_600_000\r\n// 2024        600_000      10_000_000\r\n// 2025   ...."],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}