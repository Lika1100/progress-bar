{"ast":null,"code":"export function getData(data, contribution, inflationData) {\n  const result = [];\n  let cumulativeInflation = 1;\n  let currentBalance = 0;\n  result.push({\n    month: data[0].month,\n    year: data[0].year,\n    currentBalance\n  });\n  for (let i = 1; i < data.length; i++) {\n    const {\n      month,\n      year\n    } = data[i];\n    const monthOnMonthGrowth = data[i].index / data[i - 1].index;\n    currentBalance += contribution;\n    currentBalance *= monthOnMonthGrowth;\n\n    // 100_000 * 1.1 = 110_000\n    /* cumulativeInflation *= 1 + inflation[`${month}.${year}`]/100 */\n    result.push({\n      month,\n      year,\n      currentBalance: Math.round(currentBalance),\n      inflation: 0\n    });\n  }\n  let inflationOnMonthGrowth = 1;\n  for (let i = 1; i < result.length; i++) {\n    let {\n      year,\n      month\n    } = result[i];\n    if (month >= 12) {\n      year++;\n    } else {\n      result[i].inflation = inflationData[`${month}.${year}`] / inflationData[`${month - 1}.${year}`];\n    }\n    if (year > 2024) {\n      break;\n    }\n  }\n}","map":{"version":3,"names":["getData","data","contribution","inflationData","result","cumulativeInflation","currentBalance","push","month","year","i","length","monthOnMonthGrowth","index","Math","round","inflation","inflationOnMonthGrowth"],"sources":["C:/Users/Admin/Desktop/progress-bar/src/calculator/domain/getData.js"],"sourcesContent":["export function getData(data, contribution, inflationData) {\r\n    const result = [];\r\n    \r\n    let cumulativeInflation = 1;\r\n    let currentBalance = 0;\r\n  \r\n    result.push( {month: data[0].month, year: data[0].year, currentBalance} )\r\n    \r\n    for (let i = 1; i < data.length; i++) {\r\n      const { month, year } = data[i];\r\n      const monthOnMonthGrowth = data[i].index / data[i - 1].index;\r\n      \r\n      currentBalance += contribution;\r\n      currentBalance *= monthOnMonthGrowth;\r\n      \r\n      // 100_000 * 1.1 = 110_000\r\n      /* cumulativeInflation *= 1 + inflation[`${month}.${year}`]/100 */\r\n      result.push({\r\n        month,\r\n        year,\r\n        currentBalance: Math.round(currentBalance),\r\n        inflation: 0,\r\n      })\r\n    }\r\n\r\n    let inflationOnMonthGrowth = 1;\r\n    for (let i = 1; i < result.length; i++) {\r\n        let {year, month} = result[i]\r\n        if (month >= 12) {\r\n            year ++\r\n        } else {\r\n            result[i].inflation = inflationData[`${month}.${year}`] / inflationData[`${month - 1}.${year}`]\r\n        }\r\n        if (year > 2024) {\r\n            break\r\n        }\r\n    }\r\n  }"],"mappings":"AAAA,OAAO,SAASA,OAAOA,CAACC,IAAI,EAAEC,YAAY,EAAEC,aAAa,EAAE;EACvD,MAAMC,MAAM,GAAG,EAAE;EAEjB,IAAIC,mBAAmB,GAAG,CAAC;EAC3B,IAAIC,cAAc,GAAG,CAAC;EAEtBF,MAAM,CAACG,IAAI,CAAE;IAACC,KAAK,EAAEP,IAAI,CAAC,CAAC,CAAC,CAACO,KAAK;IAAEC,IAAI,EAAER,IAAI,CAAC,CAAC,CAAC,CAACQ,IAAI;IAAEH;EAAc,CAAE,CAAC;EAEzE,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,IAAI,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;IACpC,MAAM;MAAEF,KAAK;MAAEC;IAAK,CAAC,GAAGR,IAAI,CAACS,CAAC,CAAC;IAC/B,MAAME,kBAAkB,GAAGX,IAAI,CAACS,CAAC,CAAC,CAACG,KAAK,GAAGZ,IAAI,CAACS,CAAC,GAAG,CAAC,CAAC,CAACG,KAAK;IAE5DP,cAAc,IAAIJ,YAAY;IAC9BI,cAAc,IAAIM,kBAAkB;;IAEpC;IACA;IACAR,MAAM,CAACG,IAAI,CAAC;MACVC,KAAK;MACLC,IAAI;MACJH,cAAc,EAAEQ,IAAI,CAACC,KAAK,CAACT,cAAc,CAAC;MAC1CU,SAAS,EAAE;IACb,CAAC,CAAC;EACJ;EAEA,IAAIC,sBAAsB,GAAG,CAAC;EAC9B,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,MAAM,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;IACpC,IAAI;MAACD,IAAI;MAAED;IAAK,CAAC,GAAGJ,MAAM,CAACM,CAAC,CAAC;IAC7B,IAAIF,KAAK,IAAI,EAAE,EAAE;MACbC,IAAI,EAAG;IACX,CAAC,MAAM;MACHL,MAAM,CAACM,CAAC,CAAC,CAACM,SAAS,GAAGb,aAAa,CAAE,GAAEK,KAAM,IAAGC,IAAK,EAAC,CAAC,GAAGN,aAAa,CAAE,GAAEK,KAAK,GAAG,CAAE,IAAGC,IAAK,EAAC,CAAC;IACnG;IACA,IAAIA,IAAI,GAAG,IAAI,EAAE;MACb;IACJ;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}