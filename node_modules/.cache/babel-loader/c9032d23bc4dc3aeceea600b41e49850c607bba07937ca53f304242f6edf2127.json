{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\progress-bar\\\\src\\\\progressBar\\\\ProgressBar.js\";\nimport React from 'react';\nimport \"./progressBar.css\";\nimport star from \"./star.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ProgressBar({\n  thresholds,\n  value\n}) {\n  const widthOfOneEl = 100 / thresholds.length;\n  function calcWidth(value, arr) {\n    if (arr.includes(value)) {\n      return arr.indexOf(value) + 1;\n    }\n    const indexNextEl = arr.findIndex(x => value < x);\n    if (value < arr[0]) {\n      return value / arr[indexNextEl];\n    }\n    const prevValue = arr[indexNextEl - 1] === undefined ? arr[indexNextEl] : arr[indexNextEl - 1];\n    const k = value / prevValue;\n    const result = k + indexNextEl - 1;\n    console.log(result, \"?\");\n    return result;\n  }\n  const percentColorFill = calcWidth(value, thresholds) / thresholds.length * 100;\n  const k = calcWidth(value, thresholds);\n  console.log(k, \">\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      style: {\n        background: `linear-gradient(to right, violet ${percentColorFill}%, #eee ${percentColorFill}%)`\n      },\n      children: thresholds.map((step, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-item\",\n          style: {\n            width: `${widthOfOneEl}%`,\n            borderRight: i === thresholds.length - 1 ? 0 : \"2px solid #444\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-star\",\n            children: i !== thresholds.length - 1 && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: star,\n              className: \"progress-star-img\",\n              style: {\n                top: \"-10px\",\n                left: `78px`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-step\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                top: \"35px\",\n                left: `70px`,\n                display: \"inline-block\",\n                position: \"absolute\"\n              },\n              children: step\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n//<div className='progress-bar-fill' style={{width: `${progress}%`, backgroundColor: getColor()}}></div>\n_c = ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","star","jsxDEV","_jsxDEV","ProgressBar","thresholds","value","widthOfOneEl","length","calcWidth","arr","includes","indexOf","indexNextEl","findIndex","x","prevValue","undefined","k","result","console","log","percentColorFill","className","children","style","background","map","step","i","width","borderRight","src","top","left","fileName","_jsxFileName","lineNumber","columnNumber","display","position","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/progress-bar/src/progressBar/ProgressBar.js"],"sourcesContent":["import React from 'react';\r\nimport \"./progressBar.css\";\r\nimport star from \"./star.svg\";\r\n\r\nexport function ProgressBar({ thresholds, value }) {\r\n  const widthOfOneEl = 100 / thresholds.length\r\n\r\n  function calcWidth(value, arr) {\r\n    if (arr.includes(value)) {\r\n      return arr.indexOf(value) + 1\r\n    }\r\n    const indexNextEl = arr.findIndex((x) => value < x)\r\n    if (value < arr[0]) {\r\n      return value/arr[indexNextEl]\r\n    }\r\n    const prevValue = arr[indexNextEl - 1] === undefined ? arr[indexNextEl] : arr[indexNextEl - 1]\r\n    const k = value / prevValue\r\n    const result = k + indexNextEl - 1\r\n    console.log(result, \"?\")\r\n    return result\r\n  }\r\n\r\n  const percentColorFill = calcWidth(value, thresholds) / thresholds.length * 100\r\n  \r\n  const k = calcWidth(value, thresholds)\r\n  console.log(k, \">\")\r\n  return (\r\n    <div className=\"container\">\r\n      <div className='progress-bar'\r\n        style={{ background: `linear-gradient(to right, violet ${percentColorFill}%, #eee ${percentColorFill}%)`}}\r\n      >\r\n        {thresholds.map((step, i) => {\r\n          return (\r\n            <div className='progress-item'\r\n              style={{\r\n                width: `${widthOfOneEl}%`,\r\n                borderRight: i === thresholds.length - 1 ? 0 : \"2px solid #444\"\r\n              }}\r\n            >\r\n              <div className='progress-star'>\r\n                {i !== thresholds.length - 1 &&\r\n                  <img\r\n                    src={star}\r\n                    className='progress-star-img'\r\n                    style={{ top: \"-10px\", left: `78px` }} />\r\n                }\r\n              </div>\r\n              <div className='progress-step'>\r\n                <span style={{ top: \"35px\", left: `70px`, display: \"inline-block\", position: \"absolute\" }}>{step}</span>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n//<div className='progress-bar-fill' style={{width: `${progress}%`, backgroundColor: getColor()}}></div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}