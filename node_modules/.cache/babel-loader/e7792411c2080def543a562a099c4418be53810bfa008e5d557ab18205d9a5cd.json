{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\progress-bar\\\\src\\\\progressBar\\\\ProgressBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./progressBar.css\";\nimport star from \"./star.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ProgressBar({\n  thresholds,\n  value\n}) {\n  _s();\n  const [progress, setProgress] = useState(value);\n  const widthOfOneEl = 100 / thresholds.length;\n  function calcWidth(value, arr) {\n    if (arr.includes(value)) {\n      return arr.indexOf(value) + 1;\n    }\n    const indexNextEl = arr.findIndex(x => value < x);\n    const prevValue = arr[indexNextEl - 1] === undefined ? arr[indexNextEl] : arr[indexNextEl - 1];\n    const k = value / prevValue > 1 ? value / prevValue - 1 : value / prevValue;\n    const result = k + indexNextEl;\n    console.log(k, indexNextEl, arr[indexNextEl]);\n    return result;\n  }\n  const percentColorFill = calcWidth(value, thresholds) / thresholds.length * 100;\n  const k = calcWidth(value, thresholds);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      style: {\n        background: `linear-gradient(to right, violet ${percentColorFill}%, #eee ${percentColorFill}%)`,\n        transition: `background-color 1s ease-out`\n      },\n      children: thresholds.map((step, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-item\",\n          style: {\n            width: `${widthOfOneEl}%`,\n            borderRight: i === thresholds.length - 1 ? 0 : \"2px solid #444\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-star\",\n            children: i !== thresholds.length - 1 && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: star,\n              className: \"progress-star-img\",\n              style: {\n                top: \"-10px\",\n                left: `78px`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-step\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                top: \"35px\",\n                left: `70px`,\n                display: \"inline-block\",\n                position: \"absolute\"\n              },\n              children: step\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n//<div className='progress-bar-fill' style={{width: `${progress}%`, backgroundColor: getColor()}}></div>\n_s(ProgressBar, \"naLTzwwGAM0g/JVfGXEZ4LabJ9c=\");\n_c = ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useState","star","jsxDEV","_jsxDEV","ProgressBar","thresholds","value","_s","progress","setProgress","widthOfOneEl","length","calcWidth","arr","includes","indexOf","indexNextEl","findIndex","x","prevValue","undefined","k","result","console","log","percentColorFill","className","children","style","background","transition","map","step","i","width","borderRight","src","top","left","fileName","_jsxFileName","lineNumber","columnNumber","display","position","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/progress-bar/src/progressBar/ProgressBar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"./progressBar.css\";\r\nimport star from \"./star.svg\";\r\n\r\nexport function ProgressBar({ thresholds, value }) {\r\n  const [progress, setProgress] = useState(value)\r\n  \r\n  const widthOfOneEl = 100 / thresholds.length\r\n  function calcWidth(value, arr) {\r\n    if (arr.includes(value)) {\r\n      return arr.indexOf(value) + 1\r\n    }\r\n    const indexNextEl = arr.findIndex((x) => value < x)\r\n    const prevValue = arr[indexNextEl - 1] === undefined ? arr[indexNextEl] : arr[indexNextEl - 1]\r\n    const k = value / prevValue > 1 ? value / prevValue - 1 : value / prevValue\r\n    const result = k + indexNextEl\r\n    console.log(k, indexNextEl, arr[indexNextEl])\r\n    return result\r\n  }\r\n  const percentColorFill = calcWidth(value, thresholds) / thresholds.length * 100\r\n  const k = calcWidth(value, thresholds)\r\n  return (\r\n    <div className=\"container\">\r\n      <div className='progress-bar'\r\n        style={{ background: `linear-gradient(to right, violet ${percentColorFill}%, #eee ${percentColorFill}%)`, transition: `background-color 1s ease-out` }}\r\n      >\r\n        {thresholds.map((step, i) => {\r\n          return (\r\n            <div className='progress-item'\r\n              style={{\r\n                width: `${widthOfOneEl}%`,\r\n                borderRight: i === thresholds.length - 1 ? 0 : \"2px solid #444\"\r\n              }}\r\n            >\r\n              <div className='progress-star'>\r\n                {i !== thresholds.length - 1 &&\r\n                  <img\r\n                    src={star}\r\n                    className='progress-star-img'\r\n                    style={{ top: \"-10px\", left: `78px` }} />\r\n                }\r\n              </div>\r\n              <div className='progress-step'>\r\n                <span style={{ top: \"35px\", left: `70px`, display: \"inline-block\", position: \"absolute\" }}>{step}</span>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n//<div className='progress-bar-fill' style={{width: `${progress}%`, backgroundColor: getColor()}}></div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}