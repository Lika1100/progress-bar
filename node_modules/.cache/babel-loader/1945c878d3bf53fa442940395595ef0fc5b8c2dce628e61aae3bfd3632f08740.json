{"ast":null,"code":"export function getData(data, contribution, inflationData) {\n  const result = [];\n  console.log(inflationData, \">>>\");\n  let cumulativeInflation = 1;\n  let currentBalance = 0;\n  result.push({\n    month: data[0].month,\n    year: data[0].year,\n    currentBalance\n  });\n  for (let i = 1; i < data.length; i++) {\n    const {\n      month,\n      year\n    } = data[i];\n    const monthOnMonthGrowth = data[i].index / data[i - 1].index;\n    const inflationOnMonthGrowth = Object.entries(([key, value]) => {\n      const [year, month] = key.split(\".\");\n    });\n    console.log(inflationOnMonthGrowth, \"??\");\n    currentBalance += contribution;\n    currentBalance *= monthOnMonthGrowth;\n\n    // 100_000 * 1.1 = 110_000\n    /* cumulativeInflation *= 1 + inflation[`${month}.${year}`]/100 */\n    result.push({\n      month,\n      year,\n      currentBalance: Math.round(currentBalance),\n      cumulativeInflation,\n      inflationAdjusted: contribution * cumulativeInflation\n    });\n  }\n  return result;\n}","map":{"version":3,"names":["getData","data","contribution","inflationData","result","console","log","cumulativeInflation","currentBalance","push","month","year","i","length","monthOnMonthGrowth","index","inflationOnMonthGrowth","Object","entries","key","value","split","Math","round","inflationAdjusted"],"sources":["C:/Users/Admin/Desktop/progress-bar/src/calculator/domain/getData.js"],"sourcesContent":["export function getData(data, contribution, inflationData) {\r\n    const result = [];\r\n    console.log(inflationData, \">>>\")\r\n    let cumulativeInflation = 1;\r\n    let currentBalance = 0;\r\n  \r\n    result.push( {month: data[0].month, year: data[0].year, currentBalance} )\r\n    \r\n    for (let i = 1; i < data.length; i++) {\r\n      const { month, year } = data[i];\r\n      const monthOnMonthGrowth = data[i].index / data[i - 1].index;\r\n      const inflationOnMonthGrowth = Object.entries(([key, value]) => {\r\n        const [year, month] = key.split(\".\")\r\n      })\r\n      console.log(inflationOnMonthGrowth, \"??\")\r\n      currentBalance += contribution;\r\n      currentBalance *= monthOnMonthGrowth;\r\n      \r\n      // 100_000 * 1.1 = 110_000\r\n      /* cumulativeInflation *= 1 + inflation[`${month}.${year}`]/100 */\r\n      result.push({\r\n        month,\r\n        year,\r\n        currentBalance: Math.round(currentBalance),\r\n        cumulativeInflation,\r\n        inflationAdjusted: contribution * cumulativeInflation,\r\n      })\r\n    }\r\n\r\n    return result\r\n  }"],"mappings":"AAAA,OAAO,SAASA,OAAOA,CAACC,IAAI,EAAEC,YAAY,EAAEC,aAAa,EAAE;EACvD,MAAMC,MAAM,GAAG,EAAE;EACjBC,OAAO,CAACC,GAAG,CAACH,aAAa,EAAE,KAAK,CAAC;EACjC,IAAII,mBAAmB,GAAG,CAAC;EAC3B,IAAIC,cAAc,GAAG,CAAC;EAEtBJ,MAAM,CAACK,IAAI,CAAE;IAACC,KAAK,EAAET,IAAI,CAAC,CAAC,CAAC,CAACS,KAAK;IAAEC,IAAI,EAAEV,IAAI,CAAC,CAAC,CAAC,CAACU,IAAI;IAAEH;EAAc,CAAE,CAAC;EAEzE,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,IAAI,CAACY,MAAM,EAAED,CAAC,EAAE,EAAE;IACpC,MAAM;MAAEF,KAAK;MAAEC;IAAK,CAAC,GAAGV,IAAI,CAACW,CAAC,CAAC;IAC/B,MAAME,kBAAkB,GAAGb,IAAI,CAACW,CAAC,CAAC,CAACG,KAAK,GAAGd,IAAI,CAACW,CAAC,GAAG,CAAC,CAAC,CAACG,KAAK;IAC5D,MAAMC,sBAAsB,GAAGC,MAAM,CAACC,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK;MAC9D,MAAM,CAACT,IAAI,EAAED,KAAK,CAAC,GAAGS,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;IACtC,CAAC,CAAC;IACFhB,OAAO,CAACC,GAAG,CAACU,sBAAsB,EAAE,IAAI,CAAC;IACzCR,cAAc,IAAIN,YAAY;IAC9BM,cAAc,IAAIM,kBAAkB;;IAEpC;IACA;IACAV,MAAM,CAACK,IAAI,CAAC;MACVC,KAAK;MACLC,IAAI;MACJH,cAAc,EAAEc,IAAI,CAACC,KAAK,CAACf,cAAc,CAAC;MAC1CD,mBAAmB;MACnBiB,iBAAiB,EAAEtB,YAAY,GAAGK;IACpC,CAAC,CAAC;EACJ;EAEA,OAAOH,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}