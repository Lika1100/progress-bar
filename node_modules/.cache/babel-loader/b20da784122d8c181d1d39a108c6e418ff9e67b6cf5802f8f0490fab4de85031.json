{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\progress-bar\\\\src\\\\calculator\\\\Table.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Table({\n  currentPortfolio,\n  annualSavings,\n  annualRoiPercentage,\n  retirementExpenses,\n  inflationRate = 0\n}) {\n  const data = doMath(currentPortfolio, annualSavings, annualRoiPercentage, inflationRate, retirementExpenses);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"ROI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Net Worth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Target\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), data.map(({\n        portfolio,\n        annualSavings,\n        annualRoi,\n        year,\n        retirementExpenses\n      }) => {\n        const minRetirementPortfolio = retirementExpenses / (annualRoiPercentage / 100);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            background: portfolio < minRetirementPortfolio ? \"#ffca00\" : \"#47d982\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatNumbers(annualSavings)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatNumbers(annualRoi)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatNumbers(portfolio)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatNumbers(minRetirementPortfolio)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = Table;\nfunction doMath(currentPortfolio, annualSavings, annualRoiPercentage, inflationRate, retirementExpenses) {\n  const currentYear = 2000; //new Date().getFullYear()\n  const result = [];\n  let portfolio = currentPortfolio;\n  for (let i = 0; i < 24; i++) {\n    const retirementExpensesInflationAdjusted = retirementExpenses * (1 + inflationRate / 100) ** i;\n    const annualRoi = portfolio * (inflationRate + annualRoiPercentage) / 100;\n    const annualSavingsInflationAdjusted = annualSavings * (1 + inflationRate / 100) ** i;\n    portfolio += annualSavingsInflationAdjusted + annualRoi;\n    result.push({\n      year: currentYear + i,\n      annualSavings: annualSavingsInflationAdjusted,\n      annualRoi,\n      portfolio,\n      retirementExpenses: retirementExpensesInflationAdjusted\n    });\n  }\n  return result;\n}\nfunction formatNumbers(num) {\n  let str = num.toFixed(0);\n  const result = [];\n  while (str.length > 0) {\n    result.unshift(str.slice(-3));\n    str = str.slice(0, -3);\n  }\n  return result.join(\" \");\n}\nconsole.log(formatNumbers(12345678.90)); //\"12 345 678\"\n\n// console.table(doMath(20_000_000, 10_000_000, 3));\n\n// 2023        600_000      10_000_000  30_600_000\n// 2024        600_000      10_000_000\n// 2025   ....\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Table","currentPortfolio","annualSavings","annualRoiPercentage","retirementExpenses","inflationRate","data","doMath","children","fileName","_jsxFileName","lineNumber","columnNumber","map","portfolio","annualRoi","year","minRetirementPortfolio","style","background","formatNumbers","_c","currentYear","result","i","retirementExpensesInflationAdjusted","annualSavingsInflationAdjusted","push","num","str","toFixed","length","unshift","slice","join","console","log","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/progress-bar/src/calculator/Table.js"],"sourcesContent":["import React from 'react'\r\n\r\nexport function Table({\r\n  currentPortfolio,\r\n  annualSavings,\r\n  annualRoiPercentage,\r\n  retirementExpenses,\r\n  inflationRate = 0,\r\n}) {\r\n  const data = doMath(currentPortfolio, annualSavings, annualRoiPercentage, inflationRate, retirementExpenses);\r\n  \r\n  return (\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <th>Year</th>\r\n          <th>Savings</th>\r\n          <th>ROI</th>\r\n          <th>Net Worth</th>\r\n          <th>Target</th>\r\n        </tr>\r\n        {data.map(({ portfolio, annualSavings, annualRoi, year, retirementExpenses }) => {\r\n          const minRetirementPortfolio = retirementExpenses / (annualRoiPercentage / 100);\r\n\r\n          return (\r\n            <tr style={{background: portfolio < minRetirementPortfolio ? \"#ffca00\" : \"#47d982\"}}>\r\n              <td>{year}</td>\r\n              <td>{formatNumbers(annualSavings)}</td>\r\n              <td>{formatNumbers(annualRoi)}</td>\r\n              <td>{formatNumbers(portfolio)}</td>\r\n              <td>{formatNumbers(minRetirementPortfolio)}</td>\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nfunction doMath(currentPortfolio, annualSavings, annualRoiPercentage, inflationRate, retirementExpenses) {\r\n  const currentYear = 2000//new Date().getFullYear()\r\n  const result = []\r\n\r\n  let portfolio = currentPortfolio;\r\n  for (let i = 0; i < 24; i++) {\r\n    const retirementExpensesInflationAdjusted = retirementExpenses * (1 + inflationRate / 100) ** i;\r\n    const annualRoi = portfolio * (inflationRate + annualRoiPercentage) / 100;\r\n    const annualSavingsInflationAdjusted = annualSavings * (1 + inflationRate / 100) ** i;\r\n    portfolio += annualSavingsInflationAdjusted + annualRoi;\r\n    result.push({\r\n      year: currentYear + i,\r\n      annualSavings: annualSavingsInflationAdjusted,\r\n      annualRoi,\r\n      portfolio,\r\n      retirementExpenses: retirementExpensesInflationAdjusted,\r\n    })\r\n  }\r\n  return result\r\n}\r\n\r\nfunction formatNumbers(num) {\r\n  let str = num.toFixed(0)\r\n  const result = []\r\n\r\n  while (str.length > 0) {\r\n    result.unshift(str.slice(-3))\r\n    str = str.slice(0, -3)\r\n  }\r\n\r\n  return result.join(\" \")\r\n}\r\n\r\nconsole.log(formatNumbers(12345678.90)) //\"12 345 678\"\r\n\r\n// console.table(doMath(20_000_000, 10_000_000, 3));\r\n\r\n// 2023        600_000      10_000_000  30_600_000\r\n// 2024        600_000      10_000_000\r\n// 2025   ...."],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}