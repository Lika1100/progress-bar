{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\progress-bar\\\\src\\\\progressBar\\\\ProgressBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./progressBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ProgressBar({\n  thresholds,\n  value\n}) {\n  _s();\n  const [progress, setProgress] = useState(value);\n  // [25, 50, 100, 200, 500, 1000]\n  const getColor = () => {\n    return \"violet\";\n  };\n  const widthOfOneEl = 100 / thresholds.length;\n  function calcWidth(value, arr) {\n    if (arr.includes(value)) {\n      return arr.indexOf(value) + 1;\n    }\n    const indexNextEl = arr.findIndex(x => value < x);\n    const nextValue = arr[indexNextEl];\n    const prevValue = arr[indexNextEl - 1] === undefined ? 0 : arr[indexNextEl - 1];\n    const stepBetween = nextValue - prevValue;\n    const k = value / stepBetween > 1 ? value / stepBetween - 1 : value / stepBetween;\n    const result = k + indexNextEl;\n    console.log(stepBetween, k);\n    return result;\n  }\n  console.log(calcWidth(75, thresholds));\n  const percentColorFill = calcWidth(value, thresholds) / thresholds.length * 100;\n  const percentColorEmpty = 100 - percentColorFill;\n  //console.log(percentColorFill, percentColorEmpty)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      style: {\n        background: `linear-gradient(to right, red ${percentColorFill}%, blue ${percentColorFill}%)`\n      },\n      children: thresholds.map(step => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-step\",\n          style: {\n            width: `${widthOfOneEl}%`\n          },\n          children: [\"\\u2729\", step]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n//<div className='progress-bar-fill' style={{width: `${progress}%`, backgroundColor: getColor()}}></div>\n_s(ProgressBar, \"naLTzwwGAM0g/JVfGXEZ4LabJ9c=\");\n_c = ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ProgressBar","thresholds","value","_s","progress","setProgress","getColor","widthOfOneEl","length","calcWidth","arr","includes","indexOf","indexNextEl","findIndex","x","nextValue","prevValue","undefined","stepBetween","k","result","console","log","percentColorFill","percentColorEmpty","className","children","style","background","map","step","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/progress-bar/src/progressBar/ProgressBar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"./progressBar.css\"\r\n\r\nexport function ProgressBar({ thresholds, value }) {\r\n  const [progress, setProgress] = useState(value)\r\n  // [25, 50, 100, 200, 500, 1000]\r\n  const getColor = () => {\r\n    return \"violet\"\r\n  }\r\n  const widthOfOneEl = 100/thresholds.length\r\n  function calcWidth(value, arr) {\r\n    if (arr.includes(value)) {\r\n        return arr.indexOf(value) + 1\r\n    }\r\n    const indexNextEl = arr.findIndex((x) => value < x)\r\n    const nextValue = arr[indexNextEl]\r\n    const prevValue = arr[indexNextEl - 1] === undefined ? 0 : arr[indexNextEl - 1]\r\n    const stepBetween = nextValue - prevValue\r\n    const k = value/stepBetween > 1 ? value/stepBetween - 1 : value/stepBetween\r\n    const result = k + indexNextEl\r\n    console.log(stepBetween, k)\r\n    return result\r\n  }\r\n  console.log(calcWidth(75, thresholds))\r\n  const percentColorFill = calcWidth(value, thresholds)/thresholds.length*100\r\n  const percentColorEmpty = 100 - percentColorFill\r\n  //console.log(percentColorFill, percentColorEmpty)\r\n  return (\r\n    <div className=\"container\">\r\n        <div className='progress-bar' \r\n          style={{background: `linear-gradient(to right, red ${percentColorFill}%, blue ${percentColorFill}%)`}}\r\n        >\r\n            {thresholds.map((step) => {\r\n                return (\r\n                    <div className='progress-step' style={{ width: `${widthOfOneEl}%`}}>\r\n                        âœ©{step}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n        <div>{progress}</div>\r\n      </div>\r\n  )\r\n}\r\n\r\n//<div className='progress-bar-fill' style={{width: `${progress}%`, backgroundColor: getColor()}}></div>\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,SAASC,WAAWA,CAAC;EAAEC,UAAU;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAACK,KAAK,CAAC;EAC/C;EACA,MAAMI,QAAQ,GAAGA,CAAA,KAAM;IACrB,OAAO,QAAQ;EACjB,CAAC;EACD,MAAMC,YAAY,GAAG,GAAG,GAACN,UAAU,CAACO,MAAM;EAC1C,SAASC,SAASA,CAACP,KAAK,EAAEQ,GAAG,EAAE;IAC7B,IAAIA,GAAG,CAACC,QAAQ,CAACT,KAAK,CAAC,EAAE;MACrB,OAAOQ,GAAG,CAACE,OAAO,CAACV,KAAK,CAAC,GAAG,CAAC;IACjC;IACA,MAAMW,WAAW,GAAGH,GAAG,CAACI,SAAS,CAAEC,CAAC,IAAKb,KAAK,GAAGa,CAAC,CAAC;IACnD,MAAMC,SAAS,GAAGN,GAAG,CAACG,WAAW,CAAC;IAClC,MAAMI,SAAS,GAAGP,GAAG,CAACG,WAAW,GAAG,CAAC,CAAC,KAAKK,SAAS,GAAG,CAAC,GAAGR,GAAG,CAACG,WAAW,GAAG,CAAC,CAAC;IAC/E,MAAMM,WAAW,GAAGH,SAAS,GAAGC,SAAS;IACzC,MAAMG,CAAC,GAAGlB,KAAK,GAACiB,WAAW,GAAG,CAAC,GAAGjB,KAAK,GAACiB,WAAW,GAAG,CAAC,GAAGjB,KAAK,GAACiB,WAAW;IAC3E,MAAME,MAAM,GAAGD,CAAC,GAAGP,WAAW;IAC9BS,OAAO,CAACC,GAAG,CAACJ,WAAW,EAAEC,CAAC,CAAC;IAC3B,OAAOC,MAAM;EACf;EACAC,OAAO,CAACC,GAAG,CAACd,SAAS,CAAC,EAAE,EAAER,UAAU,CAAC,CAAC;EACtC,MAAMuB,gBAAgB,GAAGf,SAAS,CAACP,KAAK,EAAED,UAAU,CAAC,GAACA,UAAU,CAACO,MAAM,GAAC,GAAG;EAC3E,MAAMiB,iBAAiB,GAAG,GAAG,GAAGD,gBAAgB;EAChD;EACA,oBACEzB,OAAA;IAAK2B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtB5B,OAAA;MAAK2B,SAAS,EAAC,cAAc;MAC3BE,KAAK,EAAE;QAACC,UAAU,EAAG,iCAAgCL,gBAAiB,WAAUA,gBAAiB;MAAG,CAAE;MAAAG,QAAA,EAEnG1B,UAAU,CAAC6B,GAAG,CAAEC,IAAI,IAAK;QACtB,oBACIhC,OAAA;UAAK2B,SAAS,EAAC,eAAe;UAACE,KAAK,EAAE;YAAEI,KAAK,EAAG,GAAEzB,YAAa;UAAE,CAAE;UAAAoB,QAAA,GAAC,QAC/D,EAACI,IAAI;QAAA;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAEd,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNrC,OAAA;MAAA4B,QAAA,EAAMvB;IAAQ;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEZ;;AAEA;AAAAjC,EAAA,CA1CgBH,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}